&perfect_model_obs_nml
   start_from_restart    = .true.
   output_restart        = .true.
   async                 = 0
   init_time_days        = -1
   init_time_seconds     = -1
   first_obs_days        = -1
   first_obs_seconds     = -1
   last_obs_days         = -1
   last_obs_seconds      = -1
   output_interval       = 1
   restart_in_file_name  = "perfect_ics"
   restart_out_file_name = "perfect_restart"
   obs_seq_in_file_name  = "obs_seq.in"
   obs_seq_out_file_name = "obs_seq.out"
   adv_ens_command       = "./advance_model.csh"
   output_timestamps     = .false.
   trace_execution       = .false.
   output_forward_op_errors = .false.
   print_every_nth_obs   = -1
   silence               = .false.
  /

&filter_nml
   async                    = 0
   adv_ens_command          = "./advance_model.csh"
   ens_size                 = 5
   start_from_restart       = .true.
   output_restart           = .true.
   obs_sequence_in_name     = "../../../observations/SST/work/obs_seq.gtspp_sst201101"
   obs_sequence_out_name    = "obs_seq.final"
   restart_in_file_name     = "dart.ics"
   restart_out_file_name    = "dart.restart"
   init_time_days           = 149751
   init_time_seconds        = 0
   first_obs_days           = 149748
   first_obs_seconds        = 43201
   last_obs_days            = 149753
   last_obs_seconds         = 43200
   obs_window_days          = 5
   obs_window_seconds       = 0
   enable_special_outlier_code = .false.
   num_output_state_members = 0
   num_output_obs_members   = 0
   output_interval          = 1
   num_groups               = 1
   input_qc_threshold       =  3.0
   outlier_threshold        = -1.0
   output_forward_op_errors = .false.
   output_timestamps        = .false.
   output_inflation         = .false.
   trace_execution          = .true.
   silence                  = .false.
   inf_flavor                  = 0,                       0
   inf_initial_from_restart    = .false.,                 .false.
   inf_sd_initial_from_restart = .false.,                 .false.
   inf_output_restart          = .true.,                  .true.
   inf_deterministic           = .true.,                  .true.
   inf_in_file_name            = 'prior_inflate_ics',     'post_inflate_ics'
   inf_out_file_name           = 'prior_inflate_restart', 'post_inflate_restart'
   inf_diag_file_name          = 'prior_inflate_diag',    'post_inflate_diag'
   inf_initial                 = 1.0,                     1.0
   inf_sd_initial              = 0.0,                     0.0
   inf_damping                 = 1.0,                     1.0
   inf_lower_bound             = 1.0,                     1.0
   inf_upper_bound             = 1000000.0,               1000000.0
   inf_sd_lower_bound          = 0.0,                     0.0
  /


&smoother_nml
   num_lags              = 0
   start_from_restart    = .false.
   output_restart        = .false.
   restart_in_file_name  = 'smoother_ics'
   restart_out_file_name = 'smoother_restart'
  /

# If you specify layout=2, you must set tasks_per_node correctly.
&ensemble_manager_nml
   single_restart_file_in  = .false.
   single_restart_file_out = .false.
   layout = 2
   tasks_per_node = 16
   perturbation_amplitude  = 0.2  /

&assim_tools_nml
   filter_kind                     = 2
   cutoff                          = 0.02
   sort_obs_inc                    = .false.
   spread_restoration              = .false.
   sampling_error_correction       = .false.
   adaptive_localization_threshold = -1
   output_localization_diagnostics = .false.
   localization_diagnostics_file   = 'localization_diagnostics'
   print_every_nth_obs             = 1
  /

&cov_cutoff_nml
   select_localization = 1
  /

&reg_factor_nml
   select_regression    = 1
   input_reg_file       = "time_mean_reg"
   save_reg_diagnostics = .false.
   reg_diagnostics_file = "reg_diagnostics"
  /

&obs_sequence_nml
   write_binary_obs_sequence = .false.
  /

&obs_kind_nml
   assimilate_these_obs_types = 'U_CURRENT_COMPONENT',
                                'V_CURRENT_COMPONENT',
                                'FLOAT_TEMPERATURE',
                                'FLOAT_SALINITY',
                                'SEA_SURFACE_HEIGHT'
  /

&assim_model_nml
   write_binary_restart_files = .true.
   netCDF_large_file_support  = .true.
  /

&model_nml
   analysis_time                = '2011-01-03 00:00:00'
   output_state_vector          = .false.
   assimilation_period_days     = 5
   assimilation_period_seconds  = 0
   model_perturbation_amplitude = 0.2
   hc                           = 250.0
   model_restart_filename       = 'roms_restart.nc'
   grid_definition_filename     = 'roms_grid.nc'
   vert_localization_coord      = 3
   debug     = 1
   variables = 'temp',   'KIND_TEMPERATURE',
               'salt',   'KIND_SALINITY',
               'u',      'KIND_U_CURRENT_COMPONENT',
               'v',      'KIND_V_CURRENT_COMPONENT',
               'zeta',   'KIND_SEA_SURFACE_HEIGHT'
  /

&roms_to_dart_nml
   roms_to_dart_output_file = 'dart.ics'
   print_data_ranges        = .true.
   perturb_state            = .false.
  /

&dart_to_roms_nml
   dart_to_roms_input_file = 'dart.restart'
   print_data_ranges       = .true.
   advance_time_present    = .false.
   time_filename           = 'roms_time'
  /

&location_nml
   horiz_dist_only             = .false.
   vert_normalization_pressure = 100000.0
   vert_normalization_height   = 10000.0
   vert_normalization_level    = 20.0
   approximate_distance        = .false.
   nlon                        = 71
   nlat                        = 36
   output_box_info             = .true.
  /

&utilities_nml
   TERMLEVEL = 1
   module_details = .false.
   logfilename = 'dart_log.out'
   nmlfilename = 'dart_log.nml'
   write_nml   = 'file'
  /

&preprocess_nml
    input_obs_def_mod_file = '../../../obs_def/DEFAULT_obs_def_mod.F90'
   output_obs_def_mod_file = '../../../obs_def/obs_def_mod.f90'
   input_obs_kind_mod_file = '../../../obs_kind/DEFAULT_obs_kind_mod.F90'
  output_obs_kind_mod_file = '../../../obs_kind/obs_kind_mod.f90'
               input_files = '../../../obs_def/obs_def_ocean_mod.f90'
  /

&obs_sequence_tool_nml
   num_input_files   = 2
   filename_seq      = 'obs_seq.one', 'obs_seq.two'
   filename_out      = 'obs_seq.processed'
   first_obs_days    = -1
   first_obs_seconds = -1
   last_obs_days     = -1
   last_obs_seconds  = -1
   print_only        = .false.
   min_lat           = -90.0
   max_lat           =  90.0
   min_lon           =   0.0
   max_lon           = 360.0
   gregorian_cal     = .true.
  /

&restart_file_tool_nml
   input_file_name              = "dart.restart"
   output_file_name             = "dart.output"
   single_restart_file_in       = .false.
   single_restart_file_out      = .false.
   ens_size                     = 5
   write_binary_restart_files   = .false.
   overwrite_data_time          = .false.
   new_data_days                = 0
   new_data_secs                = 0
   input_is_model_advance_file  = .false.
   output_is_model_advance_file = .false.
   overwrite_advance_time       = .false.
   new_advance_days             = -1
   new_advance_secs             = -1
   gregorian_cal                = .true.
  /

# The times in the namelist for the obs_diag program are vectors
# that follow the following sequence:
# year   month   day   hour   minute   second
# max_num_bins can be used to specify a fixed number of bins,
# in which case last_bin_center should be safely in the future.
#
# Acceptable latitudes range from  [-90,  90]
# Acceptable longitudes range from [  0, Inf]
# hlevel_edges should be changed to more realistic values for ROMS

&obs_diag_nml
   obs_sequence_name = ''
   obs_sequence_list = 'obs_seq_files.txt'
   first_bin_center  =  2011, 1,  3, 0, 0, 0
   last_bin_center   =  2011, 1,  8, 0, 0, 0
   bin_separation    =     0, 0,  1, 0, 0, 0
   bin_width         =     0, 0,  1, 0, 0, 0
   time_to_skip      =     0, 0,  0, 0, 0, 0
   max_num_bins = 1000
   trusted_obs  = 'null'
   Nregions     = 1
   lonlim1      =     0.0
   lonlim2      =   360.0
   latlim1      =   -90.0
   latlim2      =    90.0
   reg_names    = 'Earth'
   hlevel_edges =  0.0, 100.0, 200.0, 500.0, 1000.0, 2000.0, 5000.0
   print_mismatched_locs = .false.
   create_rank_histogram = .true.
   outliers_in_histogram = .true.
   use_zero_error_obs    = .false.
   verbose               = .true.
  /


&schedule_nml
   calendar        = 'Gregorian'
   first_bin_start =  1601,  1,  1,  0,  0,  0
   first_bin_end   =  2999,  1,  1,  0,  0,  0
   last_bin_end    =  2999,  1,  1,  0,  0,  0
   bin_interval_days    = 1000000
   bin_interval_seconds = 0
   max_num_bins         = 1000
   print_table          = .true.
  /


&obs_seq_to_netcdf_nml
   obs_sequence_name = 'obs_seq.final'
   obs_sequence_list = ''
   append_to_netcdf  = .false.
   lonlim1    =    0.0
   lonlim2    =  360.0
   latlim1    =  -90.0
   latlim2    =   90.0
   verbose    = .false.
  /


   ! This range is open ocean - it completes. right? wrong?
   interp_test_lonrange  = 298.0, 305.0
   interp_test_latrange  = 33.0, 40.0

   ! These ranges fail - have land
   interp_test_lonrange  = 270.0, 280.0
   interp_test_latrange  = 10.0, 50.0

   interp_test_lonrange  = 258.0, 320.0
   interp_test_latrange  = 8.0, 54.0

&model_mod_check_nml
   dart_input_file       = 'dart.ics'
   output_file           = 'check_me_out'
   advance_time_present  = .FALSE.
   verbose               = .TRUE.
   test1thru             = 11
   loc_of_interest       = 289.6, 37.0, 50.0
   kind_of_interest      = 'KIND_U_CURRENT_COMPONENT'
   interp_test_lonrange  = 258.0, 320.0
   interp_test_latrange  = 8.0, 54.0
   interp_test_dlon      = 0.1
   interp_test_dlat      = 0.1
   interp_test_vertrange = 1000.0,  1005.0
   interp_test_dvert     = 2000.0
   interp_test_vertcoord = 'VERTISHEIGHT'
  /

