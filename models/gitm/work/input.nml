&perfect_model_obs_nml
   start_from_restart       = .true.,
   output_restart           = .true.,
   async                    = 2,
   init_time_days           = -1,
   init_time_seconds        = -1,
   first_obs_days           = -1,
   first_obs_seconds        = -1,
   last_obs_days            = -1,
   last_obs_seconds         = -1,
   output_interval          = 1,
   trace_execution          = .false.,
   restart_in_file_name     = "perfect_ics",
   restart_out_file_name    = "perfect_restart",
   obs_seq_in_file_name     = "obs_seq.in",
   obs_seq_out_file_name    = "obs_seq.out",
   adv_ens_command          = "../shell_scripts/advance_model.csh",
   output_timestamps        = .false.,
   trace_execution          = .false.,
   output_forward_op_errors = .false.,
   print_every_nth_obs      = -1,
   silence                  = .false.,
   /


&filter_nml
   async                    = 4,
   adv_ens_command          = "../shell_scripts/advance_model.csh",
   ens_size                 = 20,
   start_from_restart       = .true.,
   output_restart           = .true.,
   obs_sequence_in_name     = "obs_seq.out",
   obs_sequence_out_name    = "obs_seq.final",
   restart_in_file_name     = "filter_ics",
   restart_out_file_name    = "filter_restart",
   init_time_days           = -1,
   init_time_seconds        = -1,
   first_obs_days           = -1,
   first_obs_seconds        = -1,
   last_obs_days            = -1,
   last_obs_seconds         = -1,
   num_output_state_members = 20,
   num_output_obs_members   = 20,
   output_interval          = 1,
   num_groups               = 1,
   input_qc_threshold       =  1.0,
   outlier_threshold        =  3.0,
   output_forward_op_errors = .false.,
   output_timestamps        = .false.,
   output_inflation         = .true.,
   trace_execution          = .false.,
   silence                  = .false.,

   inf_flavor                  = 3,                       0,
   inf_initial_from_restart    = .false.,                 .false.,
   inf_sd_initial_from_restart = .false.,                 .false.,
   inf_output_restart          = .true.,                  .true.,
   inf_deterministic           = .true.,                  .true.,
   inf_in_file_name            = 'prior_inflate_ics',     'post_inflate_ics',
   inf_out_file_name           = 'prior_inflate_restart', 'post_inflate_restart',
   inf_diag_file_name          = 'prior_inflate_diag',    'post_inflate_diag',
   inf_initial                 = 1.10,                    1.0,
   inf_sd_initial              = 0.0,                     0.0,
   inf_damping                 = 1.0,                     1.0,
   inf_lower_bound             = 1.0,                     1.0,
   inf_upper_bound             = 1000000.0,               1000000.0,
   inf_sd_lower_bound          = 0.0,                     0.0
   /


&smoother_nml
   num_lags              = 0,
   start_from_restart    = .false.,
   output_restart        = .false.,
   restart_in_file_name  = 'smoother_ics',
   restart_out_file_name = 'smoother_restart'
   /


# cutoff of 0.03 (radians) is about 200km
&assim_tools_nml
   filter_kind                     = 1,
   cutoff                          = 0.60,
   sort_obs_inc                    = .false.,
   spread_restoration              = .false.,
   sampling_error_correction       = .false.,
   adaptive_localization_threshold = -1,
   output_localization_diagnostics = .false.,
   localization_diagnostics_file   = 'localization_diagnostics',
   print_every_nth_obs             = 0
   /


&ensemble_manager_nml
   single_restart_file_in  = .false.,
   single_restart_file_out = .false.,
   perturbation_amplitude  = 0.2
   /


&cov_cutoff_nml
   select_localization = 1
   /


&reg_factor_nml
   select_regression    = 1,
   input_reg_file       = "time_mean_reg",
   save_reg_diagnostics = .false.,
   reg_diagnostics_file = "reg_diagnostics"
   /


&obs_sequence_nml
   write_binary_obs_sequence = .false.
   /


&preprocess_nml
    input_obs_kind_mod_file = '../../../obs_kind/DEFAULT_obs_kind_mod.F90',
   output_obs_kind_mod_file = '../../../obs_kind/obs_kind_mod.f90',
     input_obs_def_mod_file = '../../../obs_def/DEFAULT_obs_def_mod.F90',
    output_obs_def_mod_file = '../../../obs_def/obs_def_mod.f90',
   input_files              = '../../../obs_def/obs_def_upper_atm_mod.f90',
                              '../../../obs_def/obs_def_reanalysis_bufr_mod.f90'
   /


&obs_kind_nml
   assimilate_these_obs_types = 'SAT_TEMPERATURE',
                                'SAT_TEMPERATURE_ELECTRON',
                                'SAT_TEMPERATURE_ION',
                                'SAT_DENSITY_NEUTRAL_O3P',
                                'SAT_DENSITY_NEUTRAL_O2',
                                'SAT_DENSITY_NEUTRAL_N2',
                                'SAT_DENSITY_NEUTRAL_N4S',
                                'SAT_DENSITY_NEUTRAL_NO',
                                'SAT_DENSITY_NEUTRAL_N2D',
                                'SAT_DENSITY_NEUTRAL_N2P',
                                'SAT_DENSITY_NEUTRAL_H',
                                'SAT_DENSITY_NEUTRAL_HE',
                                'SAT_DENSITY_NEUTRAL_CO2',
                                'SAT_DENSITY_NEUTRAL_O1D',
                                'SAT_DENSITY_ION_O4SP',
                                'SAT_DENSITY_ION_O2P',
                                'SAT_DENSITY_ION_N2P',
                                'SAT_DENSITY_ION_NP',
                                'SAT_DENSITY_ION_NOP',
                                'SAT_DENSITY_ION_O2DP',
                                'SAT_DENSITY_ION_O2PP',
                                'SAT_DENSITY_ION_HP',
                                'SAT_DENSITY_ION_HEP',
                                'SAT_DENSITY_ION_E',
                                'SAT_VELOCITY_U',
                                'SAT_VELOCITY_V',
                                'SAT_VELOCITY_W',
                                'SAT_VELOCITY_U_ION',
                                'SAT_VELOCITY_V_ION',
                                'SAT_VELOCITY_W_ION',
                                'SAT_VELOCITY_VERTICAL_O3P',
                                'SAT_VELOCITY_VERTICAL_O2',
                                'SAT_VELOCITY_VERTICAL_N2',
                                'SAT_VELOCITY_VERTICAL_N4S',
                                'SAT_VELOCITY_VERTICAL_NO',
                                'SAT_F107',
                                'SAT_RHO',
				'GND_GPS_VTEC',
   /


&assim_model_nml
   write_binary_restart_files = .false.,
   netCDF_large_file_support  = .true.
   /

# The list of variables to put into the state vector is here:
# The definitions for the DART kinds are in DART/obs_def/obs_def*f90
# The order doesn't matter to DART. It may to you.

&model_nml
   gitm_restart_dirname         = 'advance_temp_e1/UA/restartOUT',
   assimilation_period_days     = 0,
   assimilation_period_seconds  = 1800,
   model_perturbation_amplitude = 0.2,
   output_state_vector          = .false.,
   calendar                     = 'Gregorian',
   debug                        = 0,
   gitm_state_variables =
                           'Temperature',            'KIND_TEMPERATURE',
                           'eTemperature',           'KIND_TEMPERATURE_ELECTRON',
                           'ITemperature',           'KIND_TEMPERATURE_ION',
                           'iO_3P_NDensityS',        'KIND_DENSITY_NEUTRAL_O3P',
                           'iO2_NDensityS',          'KIND_DENSITY_NEUTRAL_O2',
                           'iN2_NDensityS',          'KIND_DENSITY_NEUTRAL_N2',
                           'iN_4S_NDensityS',        'KIND_DENSITY_NEUTRAL_N4S',
                           'iNO_NDensityS',          'KIND_DENSITY_NEUTRAL_NO',
                           'iN_2D_NDensityS',        'KIND_DENSITY_NEUTRAL_N2D',
                           'iN_2P_NDensityS',        'KIND_DENSITY_NEUTRAL_N2P',
                           'iH_NDensityS',           'KIND_DENSITY_NEUTRAL_H',
                           'iHe_NDensityS',          'KIND_DENSITY_NEUTRAL_HE',
                           'iCO2_NDensityS',         'KIND_DENSITY_NEUTRAL_CO2',
                           'iO_1D_NDensityS',        'KIND_DENSITY_NEUTRAL_O1D',
                           'iO_4SP_IDensityS',       'KIND_DENSITY_ION_O4SP',
                           'iO2P_IDensityS',         'KIND_DENSITY_ION_O2P',
                           'iN2P_IDensityS',         'KIND_DENSITY_ION_N2P',
                           'iNP_IDensityS',          'KIND_DENSITY_ION_NP',
                           'iNOP_IDensityS',         'KIND_DENSITY_ION_NOP',
                           'iO_2DP_IDensityS',       'KIND_DENSITY_ION_O2DP',
                           'iO_2PP_IDensityS',       'KIND_DENSITY_ION_O2PP',
                           'iHP_IDensityS',          'KIND_DENSITY_ION_HP',
                           'iHeP_IDensityS',         'KIND_DENSITY_ION_HEP',
                           'ie_IDensityS',           'KIND_DENSITY_ION_E',
                           'U_Velocity_component',   'KIND_VELOCITY_U',
                           'V_Velocity_component',   'KIND_VELOCITY_V',
                           'W_Velocity_component',   'KIND_VELOCITY_W',
                           'U_IVelocity_component',  'KIND_VELOCITY_U_ION',
                           'V_IVelocity_component',  'KIND_VELOCITY_V_ION',
                           'W_IVelocity_component',  'KIND_VELOCITY_W_ION',
                           'iO_3P_VerticalVelocity', 'KIND_VELOCITY_VERTICAL_O3P',
                           'iO2_VerticalVelocity',   'KIND_VELOCITY_VERTICAL_O2',
                           'iN2_VerticalVelocity',   'KIND_VELOCITY_VERTICAL_N2',
                           'iN_4S_VerticalVelocity', 'KIND_VELOCITY_VERTICAL_N4S',
                           'iNO_VerticalVelocity',   'KIND_VELOCITY_VERTICAL_NO',
                           'f107',                   'KIND_1D_PARAMETER',
                           'Rho',                    'KIND_DENSITY',
    /


&gitm_to_dart_nml
   gitm_to_dart_output_file = 'dart_ics'
   /


&dart_to_gitm_nml
   dart_to_gitm_input_file  = 'dart_restart',
   advance_time_present     = .true.,
   /


#press is in PA
#height is in m (scaling for vertical - how many vertical meters correspond to one horizontal radian)
#level is model level


&location_nml
   horiz_dist_only             = .false.,
   vert_normalization_pressure = 100000.0,
   vert_normalization_height   = 100000.0,
   vert_normalization_level    = 20.0,
   approximate_distance        = .false.,
   nlon                        = 71,
   nlat                        = 36,
   output_box_info             = .true.
   /


&utilities_nml
   TERMLEVEL = 1,
   module_details = .false.,
   logfilename = 'dart_log.out',
   nmlfilename = 'dart_log.nml'
   /


&mpi_utilities_nml
   reverse_task_layout = .true.,
   /


# Gregorian: 12 Z 1 January 1996 <==> DART: 144270 days 43200 seconds
# Gregorian: 12 Z 1 January 2000 <==> DART: 145731 days 43200 seconds

&restart_file_tool_nml
   input_file_name              = "dart_input",
   output_file_name             = "dart_output",
   ens_size                     = 1,
   single_restart_file_in       = .true.,
   single_restart_file_out      = .true.,
   write_binary_restart_files   = .true.,
   overwrite_data_time          = .false.,
   new_data_days                = -1,
   new_data_secs                = -1,
   input_is_model_advance_file  = .false.,
   output_is_model_advance_file = .false.,
   overwrite_advance_time       = .false.,
   new_advance_days             = -1,
   new_advance_secs             = -1,
   gregorian_cal                = .true.
   /


# The times in the namelist for the obs_diag program are vectors
# that follow the following sequence:
# year   month   day   hour   minute   second
# max_num_bins can be used to specify a fixed number of bins,
# in which case last_bin_center should be safely in the future.
#
# Acceptable latitudes range from  [-90,  90]
# Acceptable longitudes range from [  0, Inf]

&obs_diag_nml
   obs_sequence_name = 'obs_seq.final',
   obs_sequence_list = '',
   first_bin_center =  2002, 12, 1, 0, 0, 0 ,
   last_bin_center  =  2002, 12, 1, 23, 59, 0 ,
   bin_separation   =     0, 0, 0, 0, 1, 0 ,
   bin_width        =     0, 0, 0, 0, 1, 0 ,
   time_to_skip     =     0, 0, 0, 0, 0, 0 ,
   max_num_bins     = 10000,
   trusted_obs      = 'null',
   Nregions   = 1,
   lonlim1    = 0.0,  130.0, 290.0, 290,
   lonlim2    = 360.0, 270.0, 380.0, 380,
   latlim1    = -90.0, -50.0, -50.0,  20,
   latlim2    =  90.0,  50.0,  50.0,  50,
   reg_names  = 'Earth', 'Pacific', 'Atlantic', 'North Atlantic',
   print_mismatched_locs = .false.,
   create_rank_histogram = .true.,
   outliers_in_histogram = .true.,
   use_zero_error_obs    = .false.,
   verbose               = .true.,
   hlevel = 0.0, 100000.0,  200000.0, 300000.0, 400000.0, 500000.0, 600000.0,
   /


&schedule_nml
   calendar        = 'Gregorian',
   first_bin_start =  1601, 1, 1, 0, 0, 0,
   first_bin_end   =  2999, 1, 1, 0, 0, 0,
   last_bin_end    =  2999, 1, 1, 0, 0, 0,
   bin_interval_days    = 1000000,
   bin_interval_seconds = 0,
   max_num_bins         = 1000,
   print_table          = .true.
   /


&obs_seq_to_netcdf_nml
   obs_sequence_name = 'obs_seq.out'
   obs_sequence_list = '',
   append_to_netcdf  = .false.,
   lonlim1    =    0.0,
   lonlim2    =  360.0,
   latlim1    =  -90.0,
   latlim2    =   90.0,
   verbose    = .false.
   /


&obs_sequence_tool_nml
   filename_seq         = '',
   filename_seq_list    = 'obs_file_list.txt',
   filename_out         = 'obs_seq.in',
   num_input_files      = 0,
   first_obs_days       = -1,
   first_obs_seconds    = -1,
   last_obs_days        = -1,
   last_obs_seconds     = -1,
   obs_types            = '',
   keep_types           = .true.,
   min_lat              =  -90.0,
   max_lat              =   90.0,
   min_lon              =    0.0,
   max_lon              =  360.0,
   print_only           = .false.,
   gregorian_cal        = .true.,
   edit_copy_metadata   = .false.,
   new_copy_metadata    = '',
   edit_qc_metadata     = .false.,
   new_qc_metadata      = '',
   edit_copies          = .false.,
   new_copy_index       = -1,
   new_copy_data        = -888888.
   edit_qcs             = .false.,
   new_qc_index         = -1,
   new_qc_data          = 0.
   synonymous_copy_list = '',
   synonymous_qc_list   = '',
   /


&model_mod_check_nml
   input_file           = "dart_ics",
   output_file          = "check_me_out",
   advance_time_present = .FALSE.,
   verbose              = .TRUE.,
   x_ind                = 720,
   kind_of_interest     = 'temperature',
   loc_of_interest      = 287.5, -82.48, 350000.,
   /

