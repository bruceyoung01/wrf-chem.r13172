&perfect_model_obs_nml
   start_from_restart    = .true.
   output_restart        = .true.
   async                 = 2
   init_time_days        = -1
   init_time_seconds     = -1
   first_obs_days        = -1
   first_obs_seconds     = -1
   last_obs_days         = -1
   last_obs_seconds      = -1
   output_interval       = 1
   restart_in_file_name  = "perfect_ics"
   restart_out_file_name = "perfect_restart"
   obs_seq_in_file_name  = "obs_seq.in"
   obs_seq_out_file_name = "obs_seq.out"
   adv_ens_command       = "./advance_model.csh"
   output_timestamps     = .false.
   trace_execution       = .false.
   output_forward_op_errors = .false.
   print_every_nth_obs   = -1
   silence               = .false.
   /

&filter_nml
   async                    = 2
   adv_ens_command          = "./advance_model.csh"
   ens_size                 = 80
   start_from_restart       = .true.
   output_restart           = .true.
   obs_sequence_in_name     = "obs_seq.out"
   obs_sequence_out_name    = "obs_seq.final"
   restart_in_file_name     = "filter_ics"
   restart_out_file_name    = "filter_restart"
   init_time_days           = -1
   init_time_seconds        = -1
   first_obs_days           = -1
   first_obs_seconds        = -1
   last_obs_days            = -1
   last_obs_seconds         = -1
   num_output_state_members = 80
   num_output_obs_members   = 80
   output_interval          = 1
   num_groups               = 1
   input_qc_threshold       =  3.0
   outlier_threshold        =  3.0
   output_forward_op_errors = .false.
   output_timestamps        = .false.
   output_inflation         = .true.
   trace_execution          = .true.
   silence                  = .false.

   inf_flavor                  = 0,                       0
   inf_initial_from_restart    = .false.,                 .false.
   inf_sd_initial_from_restart = .false.,                 .false.
   inf_output_restart          = .true.,                  .true.
   inf_deterministic           = .true.,                  .true.
   inf_in_file_name            = 'prior_inflate_ics',     'post_inflate_ics'
   inf_out_file_name           = 'prior_inflate_restart', 'post_inflate_restart'
   inf_diag_file_name          = 'prior_inflate_diag',    'post_inflate_diag'
   inf_initial                 = 1.0,                     1.0
   inf_sd_initial              = 0.0,                     0.0
   inf_damping                 = 1.0,                     1.0
   inf_lower_bound             = 1.0,                     1.0
   inf_upper_bound             = 1000000.0,               1000000.0
   inf_sd_lower_bound          = 0.0,                     0.0
   /

&smoother_nml
   num_lags              = 0
   start_from_restart    = .false.
   output_restart        = .false.
   restart_in_file_name  = 'smoother_ics'
   restart_out_file_name = 'smoother_restart'
   /

&ensemble_manager_nml
   single_restart_file_in  = .false.
   single_restart_file_out = .false.
   perturbation_amplitude  = 0.2
   /

&assim_tools_nml
   filter_kind                     = 1
   cutoff                          = 0.2
   sort_obs_inc                    = .false.
   spread_restoration              = .false.
   sampling_error_correction       = .false.
   adaptive_localization_threshold = -1
   output_localization_diagnostics = .false.
   localization_diagnostics_file   = 'localization_diagnostics'
   print_every_nth_obs             = 0
   /

# Each variable must have 6 entries.
# 1: variable name
# 2: DART KIND
# 3: minimum value - as a character string - if none, use 'NA'
# 4: maximum value - as a character string - if none, use 'NA'
# 5: what file contains the variable - anything from 'restart' also gets UPDATED BY DART.
# 6: does the variable get updated in the restart file or not ...
#    only variables from restart files may be updated.
#    'UPDATE' =>        update the variable in the restart file
#    'NO_COPY_BACK' => do not update the variable in the restart file
#    all these variables will be updated INTERNALLY IN DART.
#
# This is an example of how to restrict the range of each variable
#  variables = 'NE',    'KIND_ELECTRON_DENSITY',          '1000.0',  'NA',      'restart',   'UPDATE',
#              'TN',    'KIND_TEMPERATURE',               '0.0',     '6000.0',  'restart',   'UPDATE',
#              'TN_NM', 'KIND_TEMPERATURE',               '0.0',     '6000.0',  'restart',   'NO_COPY_BACK',
#              'O1',    'KIND_ATOMIC_OXYGEN_MIXING_RATIO','0.00001', '0.98888', 'restart',   'UPDATE',
#              'O1_NM', 'KIND_ATOMIC_OXYGEN_MIXING_RATIO','0.00001', '0.98888', 'restart',   'NO_COPY_BACK',
#              'O2',    'KIND_MOLEC_OXYGEN_MIXING_RATIO', '0.00001', '0.98888', 'restart',   'UPDATE',
#              'O2_NM', 'KIND_MOLEC_OXYGEN_MIXING_RATIO', '0.00001', '0.98888', 'restart',   'NO_COPY_BACK',
#              'UN',    'KIND_U_WIND_COMPONENT',          'NA',      'NA',      'restart',   'UPDATE',
#              'UN_NM', 'KIND_U_WIND_COMPONENT',          'NA',      'NA',      'restart',   'NO_COPY_BACK',
#              'VN',    'KIND_V_WIND_COMPONENT',          'NA',      'NA',      'restart',   'UPDATE',
#              'VN_NM', 'KIND_V_WIND_COMPONENT',          'NA',      'NA',      'restart',   'NO_COPY_BACK',
#              'OP',    'KIND_DENSITY_ION_OP',            'NA',      'NA',      'restart',   'UPDATE',
#              'TI',    'KIND_TEMPERATURE_ION',           'NA',      'NA',      'restart',   'NO_COPY_BACK',
#              'TE',    'KIND_TEMPERATURE_ELECTRON',      'NA',      'NA',      'restart',   'NO_COPY_BACK',
#              'ZG',    'KIND_GEOMETRIC_HEIGHT',          'NA',      'NA',      'secondary', 'NO_COPY_BACK',
#              'VTEC',  'KIND_VERTICAL_TEC',              'NA',      'NA',      'calculate'  'NO_COPY_BACK' 

&model_nml
   debug                       = 1
   output_state_vector         = .false.
   tiegcm_restart_file_name    = 'tiegcm_restart_p.nc'
   tiegcm_secondary_file_name  = 'tiegcm_s.nc'
   tiegcm_namelist_file_name   = 'tiegcm.nml'
   assimilation_period_seconds = 3600
   estimate_f10_7              = .false.
   variables = 'NE',    'KIND_ELECTRON_DENSITY',          '1000.0',  'NA',      'restart',    'UPDATE'
               'OP',    'KIND_DENSITY_ION_OP',            'NA',      'NA',      'restart',    'UPDATE',
               'TI',    'KIND_TEMPERATURE_ION',           'NA',      'NA',      'restart',    'UPDATE',
               'TE',    'KIND_TEMPERATURE_ELECTRON',      'NA',      'NA',      'restart',    'UPDATE',
               'OP_NM', 'KIND_DENSITY_ION_OP',            'NA',      'NA',      'restart',    'UPDATE',
	       'O1',    'KIND_ATOMIC_OXYGEN_MIXING_RATIO','0.00001', '0.99999', 'restart',    'NO_COPY_BACK',
               'O2',    'KIND_MOLEC_OXYGEN_MIXING_RATIO', '0.00001', '0.99999', 'restart',    'NO_COPY_BACK',
               'TN',    'KIND_TEMPERATURE',               '0.0',     '6000.0',  'restart',    'NO_COPY_BACK',
               'ZG',    'KIND_GEOMETRIC_HEIGHT',          'NA',      'NA',      'secondary',  'NO_COPY_BACK',
               'VTEC',  'KIND_VERTICAL_TEC',              'NA',      'NA',      'calculate',  'NO_COPY_BACK' 
   /


&model_to_dart_nml
   file_out      = 'dart_ics'
   /

&dart_to_model_nml
   file_in              = 'dart_restart'
   file_namelist_out    = 'namelist_update'
   advance_time_present = .false.
   /

&cov_cutoff_nml
   select_localization = 1
   /

&reg_factor_nml
   select_regression    = 1
   input_reg_file       = "time_mean_reg"
   save_reg_diagnostics = .false.
   reg_diagnostics_file = "reg_diagnostics"
   /

&obs_sequence_nml
   write_binary_obs_sequence = .false.
   /

&obs_kind_nml
   assimilate_these_obs_types = 'CHAMP_DENSITY', 'GPS_VTEC_EXTRAP', 'GPS_PROFILE'
   evaluate_these_obs_types   = 'GND_GPS_VTEC'
   /

&assim_model_nml
   write_binary_restart_files = .true.
   netCDF_large_file_support  = .true.
   /

&location_nml
   horiz_dist_only             = .true.
   vert_normalization_pressure = 100000.0
   vert_normalization_height   = 10000.0
   vert_normalization_level    = 20.0
   approximate_distance        = .false.
   nlon                        = 71
   nlat                        = 36
   output_box_info             = .false.
   /

&preprocess_nml
           overwrite_output = .true.
    input_obs_kind_mod_file = '../../../obs_kind/DEFAULT_obs_kind_mod.F90'
   output_obs_kind_mod_file = '../../../obs_kind/obs_kind_mod.f90'
     input_obs_def_mod_file = '../../../obs_def/DEFAULT_obs_def_mod.F90'
    output_obs_def_mod_file = '../../../obs_def/obs_def_mod.f90'
   input_files              = '../../../obs_def/obs_def_upper_atm_mod.f90'
   /

&utilities_nml
   TERMLEVEL = 1
   module_details = .true.
   logfilename = 'dart_log.out'
   nmlfilename = 'dart_log.nml'
   write_nml   = 'file'
   /

&mpi_utilities_nml
   /

&restart_file_utility_nml
   input_file_name              = "filter_restart"
   output_file_name             = "filter_updated_restart"
   ens_size                     =  1
   single_restart_file_in       = .true.
   single_restart_file_out      = .true.
   write_binary_restart_files   = .true.
   overwrite_data_time          = .false.
   new_data_days                =  -1
   new_data_secs                =  -1
   input_is_model_advance_file  = .false.
   output_is_model_advance_file = .false.
   overwrite_advance_time       = .false.
   new_advance_days             =  -1
   new_advance_secs             =  -1
   /

# The times in the namelist for the obs_diag program are vectors
# that follow the following sequence:
# year   month   day   hour   minute   second
# max_num_bins can be used to specify a fixed number of bins
# in which case last_bin_center should be safely in the future.
#
# Acceptable latitudes range from  [-90,  90]
# Acceptable longitudes range from [  0, Inf]

&obs_diag_nml
   obs_sequence_name = 'obs_seq.final'
   obs_sequence_list = ''
   first_bin_center =  2005, 9,  9, 0, 0, 0 
   last_bin_center  =  2005, 9, 10, 0, 0, 0 
   bin_separation   =     0, 0,  0, 1, 0, 0 
   bin_width        =     0, 0,  0, 1, 0, 0 
   time_to_skip     =     0, 0,  0, 1, 0, 0 
   max_num_bins     = 1000
   trusted_obs      = 'null'
   Nregions   = 4
   hlevel = 0, 100000, 200000, 300000, 400000, 500000, 600000, 700000, 800000, 900000, 1000000
   lonlim1    =   0.0,   0.0,   0.0, 235.0
   lonlim2    = 360.0, 360.0, 360.0, 295.0
   latlim1    =  20.0, -80.0, -20.0,  25.0
   latlim2    =  80.0, -20.0,  20.0,  55.0
   reg_names  = 'Northern Hemisphere', 'Southern Hemisphere', 'Tropics', 'North America'
   print_mismatched_locs = .false.
   create_rank_histogram = .true.
   outliers_in_histogram = .true.
   use_zero_error_obs    = .false.
   verbose               = .true.
   /

# obs_seq_to_netcdf also requires the schedule_nml.
# In this context, schedule_nml defines how many netcdf files get created.
# Each 'bin' results in an obs_epoch_xxxx.nc file.
# default is to put everything into one 'bin'.

&obs_seq_to_netcdf_nml
   obs_sequence_name = 'obs_seq.final'
   obs_sequence_list = ''
   append_to_netcdf  = .false.
   lonlim1    =    0.0
   lonlim2    =  360.0
   latlim1    =  -90.0
   latlim2    =   90.0
   verbose    = .false.
   /

&schedule_nml
   calendar        = 'Gregorian'
   first_bin_start =  1601,  1,  1,  0,  0,  0
   first_bin_end   =  2999,  1,  1,  0,  0,  0
   last_bin_end    =  2999,  1,  1,  0,  0,  0
   bin_interval_days    = 1000000
   bin_interval_seconds = 0
   max_num_bins         = 1000
   print_table          = .true.
   /

&obs_sequence_tool_nml
   num_input_files   = 1
   filename_seq      = 'obs_seq.out'
   filename_out      = 'obs_seq.processed'
   first_obs_days    = -1
   first_obs_seconds = -1
   last_obs_days     = -1
   last_obs_seconds  = -1
   obs_types         = ''
   keep_types        = .false.
   print_only        = .false.
   min_lat           = -90.0
   max_lat           = 90.0
   min_lon           = 0.0
   max_lon           = 360.0
   /

&model_mod_check_nml
   input_file           = "dart_ics"
   output_file          = "check_me_out"
   advance_time_present = .false.
   verbose              = .true.
   x_ind                = 36288
   loc_of_interest      = 240.0, 12.49, 200000.0
   /

