# DART $Id: $

IMPORTANT: The WRF-Chem build mechanism has been replaced by the DART mkmf mechanism.
           All that is needed to build wesely and exo_coldens is to run
           quickbuild.csh   in the  RUN_WES_COLDENS/work directory.
           The environment from the mkmf.template is used, so there is no further
           customization needed. As per the WRF-Chem/DART developers policy, the
           executables have a '.exe' extension, which is an addition to the
           native naming scheme.

           For more information, see https://www2.acom.ucar.edu/wrf-chem/wrf-chem-tools-community

           The original README follows.

        ------------------------------------------------------------------------

	The exo_coldens utility, a single cpu code, reads WRF and Mozart
        input files and produces netcdf files, on a per WRF domain basis,
        containing overhead O2 and O3 column densities.  These files
        are only used for the WRF-chem MOZART and MOZCART chemistry options.
        
	Building the exo_coldens utility
        ======== === =========== =======

	The executable is created with the

	make_util

	script.  The make_util script is invoked as :

	make_util exo_coldens

	make_util should work on any platform with either a Portland
	Group or IBM fortran90 compiler.  The only required library
	is netcdf.  If you require another compiler send email to :

        stacy@ucar.edu
	
        Throughout this documentation <nn> represents an integer,
	two digit number, starting with 01, denoting the WRF grid.

        The exo_coldens program reads WRF wrfinput_d<nn> files and
        a Mozart data file containing O2 and O3 column densities.
        The default Mozart data file is exo_coldens.nc.
        
	The exo_coldens utility reads a short namelist which consists of :

	Namelist control variables
        ======== ======= =========

	Variable name             Variable type                                   default value
	-------- ----             -------- ----                                   ------- -----

        wrf_dir                   character(len=80),scalar                        (current directory)
        exo_dir                   character(len=80),scalar                        (current directory)
        exo_flnm                  character(len=80),scalar                        exo_coldens.nc
        domains                   integer,scalar                                   1

	domains         - an integer representing the number of wrf domains
	wrf_dir         - a character variable representing the full path
                          to the wrfinput_d<nn> files.  This variable should
	                  NOT end in the forward slash character "/"
        exo_dir         - same as wrf_dir except represents the directory
                          of the Mozart column density dataset
	exo_flnm        - a character variable representing the filename of
	                  the Mozart column denisty dataset

	Running exo_coldens
        ======= ===========

	To run exo_coldens issue the command:

	exo_coldens < exo_coldens.inp > exo_coldens.out

        Redirected input is required. Redirected output is optional.
        The exo_coldens.inp, exo_coldens.out filenames are for illustration
        only: you may use any valid filename in place of exo_coldens.inp,
        exo_coldens.out.  The exo_coldens.out is an ascii file containing the
        complete output from running exo_coldens.  In almost all cases it is
        sensible to let the ascii output from running exo_coldens go to the screen as in :

	exo_coldens < exo_coldens.inp

	Example input file
	======= ===== ====

	The file exo_coldens.inp listed directly below


&control

domains = 2,

/

	directs exo_coldens to produce output files exo_coldens_d01 and
        exo_coldens_d02 using wrfinput_d01 and wrfinput_d02 files and 
        the exo_coldens.nc file.  Since neither exo_dir or wrf_dir are
        set in the example namelist the input files are expected to be in
        the directory where exo_coldens is invoked.

	If you have questions please contact :

	Gabriele Pfister (pfister@ucar.edu) or Stacy Walters (stacy@ucar.edu)
