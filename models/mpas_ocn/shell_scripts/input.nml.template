&perfect_model_obs_nml
   start_from_restart    = .true.,
   output_restart        = .true.,
   async                 = 0,
   init_time_days        = -1,
   init_time_seconds     = -1,
   first_obs_days        = -1,
   first_obs_seconds     = -1,
   last_obs_days         = -1,
   last_obs_seconds      = -1,
   output_interval       = 1,
   restart_in_file_name  = "perfect_ics",
   restart_out_file_name = "perfect_restart",
   obs_seq_in_file_name  = "obs_seq.in",
   obs_seq_out_file_name = "obs_seq.out",
   adv_ens_command       = "./advance_model.csh",
   output_timestamps     = .false.,
   trace_execution       = .true.,
   output_forward_op_errors = .false.,
   print_every_nth_obs   = 100,
   silence               = .false.,
   /

&filter_nml
   async                    = 2,
   adv_ens_command          = "./advance_model.csh",
   ens_size                 = 2,
   start_from_restart       = .true.,
   output_restart           = .true.,
   obs_sequence_in_name     = "obs_seq.out",
   obs_sequence_out_name    = "obs_seq.final",
   restart_in_file_name     = "filter_ics",
   restart_out_file_name    = "filter_restart",
   init_time_days           = -1,
   init_time_seconds        = -1,
   first_obs_days           = -1,
   first_obs_seconds        = -1,
   last_obs_days            = -1,
   last_obs_seconds         = -1,
   num_output_state_members = 2,
   num_output_obs_members   = 2,
   output_interval          = 1,
   num_groups               = 1,
   input_qc_threshold       =  3.0,
   outlier_threshold        = -1.0,
   output_forward_op_errors = .false.,
   output_timestamps        = .false.,
   output_inflation         = .true.,
   trace_execution          = .true.,
   silence                  = .false.,

   inf_flavor                  = 0,                       0,
   inf_initial_from_restart    = .false.,                 .false.,
   inf_sd_initial_from_restart = .false.,                 .false.,
   inf_output_restart          = .true.,                  .true.,
   inf_deterministic           = .true.,                  .true.,
   inf_in_file_name            = 'prior_inflate_ics',     'post_inflate_ics',
   inf_out_file_name           = 'prior_inflate_restart', 'post_inflate_restart',
   inf_diag_file_name          = 'prior_inflate_diag',    'post_inflate_diag',
   inf_initial                 = 1.0,                     1.0,
   inf_sd_initial              = 0.6,                     0.0,
   inf_damping                 = 0.9,                     1.0,
   inf_lower_bound             = 1.0,                     1.0,
   inf_upper_bound             = 1000000.0,               1000000.0,
   inf_sd_lower_bound          = 0.6,                     0.0
   /

&mpi_utilities_nml
   /

&smoother_nml
   num_lags              = 0,
   start_from_restart    = .false.,
   output_restart        = .false.,
   restart_in_file_name  = 'smoother_ics',
   restart_out_file_name = 'smoother_restart'
   /

&ensemble_manager_nml
   single_restart_file_in  = .true.,
   single_restart_file_out = .true.,
   perturbation_amplitude  = 0.2
   /

&assim_tools_nml
   filter_kind                     = 1,
   cutoff                          = 1000000.0,
   sort_obs_inc                    = .false.,
   spread_restoration              = .false.,
   sampling_error_correction       = .false.,
   adaptive_localization_threshold = -1,
   output_localization_diagnostics = .false.,
   localization_diagnostics_file   = 'localization_diagnostics',
   print_every_nth_obs             = 0
   /

&location_nml
   horiz_dist_only             = .true.,
   vert_normalization_pressure = 100000.0,
   vert_normalization_height   = 10000.0,
   vert_normalization_level    = 20.0,
   approximate_distance        = .true.,
   nlon                        = 71,
   nlat                        = 36,
   output_box_info             = .false.,
   print_box_level             = 0,
   /

&xyz_location_nml
   /

&cov_cutoff_nml
   select_localization = 1
   /

&reg_factor_nml
   select_regression    = 1,
   input_reg_file       = "time_mean_reg",
   save_reg_diagnostics = .false.,
   reg_diagnostics_file = "reg_diagnostics"
   /

&obs_sequence_nml
   write_binary_obs_sequence = .false.
   /

# options for assimilate and evaluate include:
# (first column is the obs, second is what needs to be in the state vector
# to compute it.)
# ARGO_U_CURRENT_COMPONENT,      KIND_U_CURRENT_COMPONENT
# ARGO_V_CURRENT_COMPONENT,      KIND_V_CURRENT_COMPONENT
# ARGO_SALINITY,                 KIND_SALINITY
# ARGO_TEMPERATURE,              KIND_TEMPERATURE
# ADCP_U_CURRENT_COMPONENT,      KIND_U_CURRENT_COMPONENT
# ADCP_V_CURRENT_COMPONENT,      KIND_V_CURRENT_COMPONENT
# ADCP_SALINITY,                 KIND_SALINITY
# ADCP_TEMPERATURE,              KIND_TEMPERATURE
# FLOAT_SALINITY,                KIND_SALINITY
# FLOAT_TEMPERATURE,             KIND_TEMPERATURE
# DRIFTER_U_CURRENT_COMPONENT,   KIND_U_CURRENT_COMPONENT
# DRIFTER_V_CURRENT_COMPONENT,   KIND_V_CURRENT_COMPONENT
# DRIFTER_SALINITY,              KIND_SALINITY
# DRIFTER_TEMPERATURE,           KIND_TEMPERATURE
# GLIDER_U_CURRENT_COMPONENT,    KIND_U_CURRENT_COMPONENT
# GLIDER_V_CURRENT_COMPONENT,    KIND_V_CURRENT_COMPONENT
# GLIDER_SALINITY,               KIND_SALINITY
# GLIDER_TEMPERATURE,            KIND_TEMPERATURE
# MOORING_U_CURRENT_COMPONENT,   KIND_U_CURRENT_COMPONENT
# MOORING_V_CURRENT_COMPONENT,   KIND_V_CURRENT_COMPONENT
# MOORING_SALINITY,              KIND_SALINITY
# MOORING_TEMPERATURE,           KIND_TEMPERATURE
# MOORING_PRESSURE,              KIND_PRESSURE
# BOTTLE_SALINITY,               KIND_SALINITY
# BOTTLE_TEMPERATURE,            KIND_TEMPERATURE
# CTD_SALINITY,                  KIND_SALINITY
# CTD_TEMPERATURE,               KIND_TEMPERATURE
# TCTD_SALINITY,                 KIND_SALINITY
# TCTD_TEMPERATURE,              KIND_TEMPERATURE
# STD_SALINITY,                  KIND_SALINITY
# STD_TEMPERATURE,               KIND_TEMPERATURE
# XCTD_SALINITY,                 KIND_SALINITY
# XCTD_TEMPERATURE,              KIND_TEMPERATURE
# MBT_SALINITY,                  KIND_SALINITY
# MBT_TEMPERATURE,               KIND_TEMPERATURE
# XBT_SALINITY,                  KIND_SALINITY
# XBT_TEMPERATURE,               KIND_TEMPERATURE
# DBT_SALINITY,                  KIND_SALINITY
# DBT_TEMPERATURE,               KIND_TEMPERATURE
# APB_SALINITY,                  KIND_SALINITY
# APB_TEMPERATURE,               KIND_TEMPERATURE
# DOPPLER_U_CURRENT_COMPONENT,   KIND_U_CURRENT_COMPONENT
# DOPPLER_V_CURRENT_COMPONENT,   KIND_V_CURRENT_COMPONENT
# DOPPLER_W_CURRENT_COMPONENT,   KIND_W_CURRENT_COMPONENT
# SATELLITE_MICROWAVE_SST,       KIND_TEMPERATURE
# SATELLITE_INFRARED_SST,        KIND_TEMPERATURE

&obs_kind_nml
   assimilate_these_obs_types = 'null',
   evaluate_these_obs_types = 'ARGO_TEMPERATURE'
   /

&assim_model_nml
   write_binary_restart_files = .true.,
   netCDF_large_file_support  = .false.
   /

&model_nml
   model_analysis_filename      = '../data/mpas_ocean_in.nc'
   grid_definition_filename     = '../data/mpas_ocean_in.nc'
   assimilation_period_days     = 0,
   assimilation_period_seconds  = 3600,
   output_state_vector          = .true., 
   model_perturbation_amplitude = 0.0001,
   calendar                     = 'Gregorian',
   use_u_for_wind               = .false.,
   use_rbf_option               = 2,
   update_u_from_reconstruct    = .false.,
   use_increments_for_u_update  = .false.,
   xyzdebug                     = 0,
   debug                        = 2
   /

# NOTE: h(nVertLevels,nCells,Time) is layer thickness, not SSH
#  we don't have a kind defined for thickness yet.
#  examples of other kinds which could be in state vector.
#  the temperature should really be potential temp, but the
#  conversion routines (at the end of the model_mod.f90 file)
#  are commented out here because they're for the atmosphere not ocean.
#  we need to add a case for temp vs potential temp, and conversion code.
#                    'tracer1',      'KIND_TRACER_CONCENTRATION' 
#                          'u',      'KIND_EDGE_NORMAL_SPEED',
#                'temperature',      'KIND_POTENTIAL_TEMPERATURE',

&mpas_vars_nml
   mpas_state_variables = 'temperature',            'KIND_TEMPERATURE',
                          'salinity',               'KIND_SALINITY',
                          'rho',                    'KIND_DENSITY',
                          'uReconstructMeridional', 'KIND_U_CURRENT_COMPONENT',
                          'uReconstructZonal',      'KIND_V_CURRENT_COMPONENT',
  /

&model_to_dart_nml
   model_to_dart_output_file  = 'dart_ics',
  /

&dart_to_model_nml
   dart_to_model_input_file = 'dart_restart',
   advance_time_present     = .true.,
  / 

&utilities_nml
   TERMLEVEL = 1,
   module_details = .false.,
   logfilename = 'dart_log.out',
   nmlfilename = 'dart_log.nml',
   write_nml   = 'file'
   /

&preprocess_nml
    input_obs_def_mod_file = '../../../obs_def/DEFAULT_obs_def_mod.F90', 
   output_obs_def_mod_file = '../../../obs_def/obs_def_mod.f90', 
   input_obs_kind_mod_file = '../../../obs_kind/DEFAULT_obs_kind_mod.F90', 
  output_obs_kind_mod_file = '../../../obs_kind/obs_kind_mod.f90', 
               input_files = '../../../obs_def/obs_def_ocean_mod.f90'
   /

&obs_sequence_tool_nml
   num_input_files   = 2,
   filename_seq      = 'obs_seq.one', 'obs_seq.two',
   filename_out      = 'obs_seq.processed',
   first_obs_days    = -1,
   first_obs_seconds = -1,
   last_obs_days     = -1,
   last_obs_seconds  = -1,
   print_only        = .false.,
   min_lat           = -90.0,
   max_lat           =  90.0,
   min_lon           =   0.0,
   max_lon           = 360.0,
   gregorian_cal     = .true.
   /

# other possible obs tool namelist items:
#
# keep only the U and V radiosonde winds:
#   obs_types          = 'RADIOSONDE_U_WIND_COMPONENT',
#                        'RADIOSONDE_V_WIND_COMPONENT',
#   keep_types         = .true.,
#
# remove the U and V radiosonde winds:
#   obs_types          = 'RADIOSONDE_U_WIND_COMPONENT',
#                        'RADIOSONDE_V_WIND_COMPONENT',
#   keep_types         = .false.,
#
# keep only observations with a DART QC of 0:
#   qc_metadata        = 'Dart quality control',
#   min_qc             = 0,
#   max_qc             = 0,
#
# keep only radiosonde temp obs between 250 and 300 K:
#   copy_metadata      = 'NCEP BUFR observation',
#   copy_type          = 'RADIOSONDE_TEMPERATURE',
#   min_copy           = 250.0,
#   max_copy           = 300.0,
#

&restart_file_tool_nml
   input_file_name              = "filter_restart",
   output_file_name             = "filter_updated_restart",
   ens_size                     = 1,
   single_restart_file_in       = .true.,
   single_restart_file_out      = .true.,
   write_binary_restart_files   = .true.,
   overwrite_data_time          = .false.,
   new_data_days                = -1,
   new_data_secs                = -1,
   input_is_model_advance_file  = .false.,
   output_is_model_advance_file = .false.,
   overwrite_advance_time       = .false.,
   new_advance_days             = -1,
   new_advance_secs             = -1,
   gregorian_cal                = .true.
   /

&obs_diag_nml
   obs_sequence_name = '',
   obs_sequence_list = 'file_list.txt',
   first_bin_center =  2007,  1,  1, 6, 0, 0 ,
   last_bin_center  =  2007,  2,  1, 0, 0, 0 ,
   bin_separation   =     0, 0, 0, 6, 0, 0 ,
   bin_width        =     0, 0, 0, 6, 0, 0 ,
   time_to_skip     =     0, 0, 0, 0, 0, 0 ,
   max_num_bins     = 1000,
   trusted_obs      = 'null',
   Nregions   = 3,
   lonlim1    = 285.0,  20.0, 120.0,
   lonlim2    =  20.0, 120.0, 270.0,
   latlim1    = -90.0, -90.0, -90.0,
   latlim2    =  90.0,  25.0,  90.0,
   reg_names  = 'Atlantic', 'Indian', 'Pacific',
   create_rank_histogram = .true.,
   outliers_in_histogram = .true.,
   use_zero_error_obs    = .false.,
   verbose               = .true.
   /


# possible vertical coordinate systems are:
# VERTISUNDEF VERTISSURFACE VERTISLEVEL VERTISPRESSURE VERTISHEIGHT VERTISSCALEHEIGHT
   kind_of_interest = 'KIND_TEMPERATURE',
   kind_of_interest = 'KIND_SALINITY',
   kind_of_interest = 'KIND_U_CURRENT',
   kind_of_interest = 'KIND_V_CURRENT',
   kind_of_interest = 'KIND_DENSITY',

&model_mod_check_nml
   dart_input_file       = 'dart_ics',
   output_file           = 'check_me',
   advance_time_present  = .FALSE.,
   verbose               = .FALSE.,
   test1thru             = 10,
   x_ind                 = 300 ,
   loc_of_interest       = 240.0, 0.0, 10000.0,
   kind_of_interest      = 'KIND_TEMPERATURE',
   interp_test_lonrange  = 0.0, 359.0,
   interp_test_dlon      = 1.0,
   interp_test_latrange  = -89.0, 89.0,
   interp_test_dlat      = 1.0,
   interp_test_vertrange = 100.0,  300.0,
   interp_test_dvert     = 200.0,
   interp_test_vertcoord = 'VERTISHEIGHT'
   /
