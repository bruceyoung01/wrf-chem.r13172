# DART software - Copyright 2004 - 2011 UCAR. This open source software is
# provided by UCAR, "as is", without charge, subject to all terms of use at
# http://www.image.ucar.edu/DAReS/DART/DART_download
#
# DART $Id$

Description of the scripts provided to process the COSMIC, CHAMP, GRACE and 
other GPS radio occultation data.

Summary of workflow:  
1) cd to the ../work directory and run ./quickbuild.csh to compile everything.  
2) Edit ./gpsro_to_obsseq.csh once to set the directory where the DART
    code is installed, and your CDAAC web site user name and password.
3) Edit ./do_convert.csh to set the days of data to download/convert/remove,
   and what directory you want the work to be done in.
4) Run ./do_convert.csh
5) For additional days repeat steps 3 and 4.
6) For long conversions, edit ./do_convert.lsf and submit it to the batch system.


More details:

1) quickbuild.csh:

Make sure your $DART/mkmf/mkmf.template is one that matches the
platform and compiler for your system.  It should be the same as
how you have it set to build the other DART executables.

Run quickbuild.csh and it should compile all the executables needed
to do the GPS conversion into DART obs_sequence files.


2) gpsro_to_obsseq.csh:

Edit gpsro_to_obsseq.csh once to set the DART_DIR to where you have
downloaded the DART distribution.  (There are a few additional options
in this script, but the distribution version should be good for most users.)
If you are downloading data from the CDAAC web site, set your
web site user name and password.  After this you should be able to 
ignore this script.


3) do_convert.csh:

A wrapper script that calls the converter script a day at a time.
Set the days of data you want to download/convert/remove.  See the
comments at the top of this script for the various options to set.  
Rerun this script for all data you need.  This script depends on
the advance_time executable, which should automatically be built
in the ../work directory, but you may have to copy or link to a
version from this dir.  you also need a minimal input.nml here:

&utilities_nml
 /

is all the contents it needs.



It can be risky to use the automatic delete/cleanup option - if there are
any errors in the script or conversion (file system full, bad file format,
etc) and the script doesn't exit, it can delete the input files before 
the conversion has succeeded.  But if you have file quota concerns
this allows you to keep the total disk usage lower.

My recommendation is to run a few days without the autodelete option and
check the logs carefully.  When it seems to be working correctly, turn 
the autodelete option on before doing a long run.



